name: workflow_secrets
on: workflow_dispatch

# env: 
#     DB_U: ${{ vars.DB_USERNAME }} # 用戶名 # test
#     DB_P: ${{ secrets.DB_PASSWORD }} # 對密碼進行保護

jobs:
    test-secrets:
        environment: test
        env: # 這樣的環境變量只能在test-secrets裡面使用
            DB_U: ${{ vars.DB_USERNAME }} # 用戶名 # test
            DB_P: ${{ secrets.DB_PASSWORD }} # 對密碼進行保護
        runs-on: ubuntu-22.04
        steps:
            - name: checkout code
              uses: actions/checkout@v4
            - name: check env u
              run: echo "u=${{ env.DB_U }}"
            - name: check env p
              # run: echo "p=${{ env.DB_P }}"
              run: echo "p=${{ secrets.DB_PASSWORD }}" # secrets值要足夠複雜 pw=jsjdhkcjnjsndjn
            - name: test with python
              run: python secrets.py

    # apply-jobs:
    #     env: # 這樣的環境變量只能在test-secrets裡面使用
    #         DB_U: ${{ vars.DB1_USERNAME }} # 用戶名 # test
    #         DB_P: ${{ secrets.DB1_PASSWORD }} # 對密碼進行保護
    #     runs-on: ubuntu-22.04
    #     steps:
    #         - name: checkout code
    #           uses: actions/checkout@v4

    prod-secrets:
        environment: prod
        env: # 這樣的環境變量只能在test-secrets裡面使用
            DB_U: ${{ vars.DB_USERNAME }} # 用戶名 # test
            DB_P: ${{ secrets.DB_PASSWORD }} # 對密碼進行保護
        runs-on: ubuntu-22.04
        steps:
            - name: checkout code
              uses: actions/checkout@v4
            - name: check env u
              run: echo "u=${{ env.DB_U }}"
            - name: check env p
              run: echo "p=${{ secrets.DB_PASSWORD }}"
            - name: test with python
              run: python secrets.py